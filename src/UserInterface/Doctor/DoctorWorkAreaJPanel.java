/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Doctor;
//conflict remove
import Business.Doctor.Doctor;
import Business.EcoSystem;

import Business.Enterprise.Enterprise;
import Business.Organizations.DoctorOrganization;

import Business.Organizations.Organizations;

import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JPanel;
import Business.Enterprise.Enterprise;
import Business.WorkQueue.DonorOrganWorkRequest;
import Business.WorkQueue.PatientCostWorkRequest;
import Business.WorkQueue.PatientOrganWorkRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shah's
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    private Doctor doctor;
    private JPanel RightPanel;
    private DoctorOrganization docOrganization;
    private UserAccount account;
    private Enterprise enterprise;
    public DoctorWorkAreaJPanel(JPanel RightPanel, UserAccount account, Organizations organization, Enterprise enterprise, EcoSystem business) {
        //DoctNameLable.setText(doctor.getFirstName()+" "+doctor.getLastName());
        initComponents();
        this.RightPanel=RightPanel;
        this.docOrganization=(DoctorOrganization)organization;
        
        this.account=account;
        this.enterprise=enterprise;
        populateTable();
       // populateTable1();
        populateCostTable();
    }

    public void populateCostTable()
    {
        DefaultTableModel model = (DefaultTableModel)CostModel.getModel();
        model.setRowCount(0);
       for(WorkRequest wr:docOrganization.getCostEstimation().getWorkRequestList()){
        Object[] row = new Object[4];
            row[0] = wr;
            row[1] = wr.getMessage();
            row[2] = wr.getReceiver() == null ? null : wr.getReceiver().getUser().getName();
            row[3] = wr.getStatus();
       //     row[4] = "??";
            model.addRow(row);        
        }      
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)UserListTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : docOrganization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[5];
            row[0] = request;
            row[1] = request.getMessage();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getUser().getName();
            row[3] = request.getStatus();
            row[4] = request.getRole();
            
            model.addRow(row);
        }
    }
    
    
    /*public void populateTable1(){
        DefaultTableModel model = (DefaultTableModel)DonorListJTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request1 : docOrganization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
            row[0] = request1;
            row[1] = request1.getSender().getUser().getName();
            row[2] = request1.getReceiver() == null ? null : request1.getReceiver().getUser().getName();
            row[3] = request1.getStatus();
            
            model.addRow(row);
        }
    }*/
    
    
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Candidate = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        UserListTable = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CostModel = new javax.swing.JTable();
        btnProcess1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnAssign1 = new javax.swing.JButton();
        btnback = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 153, 153));
        setLayout(null);

        jLabel3.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Donors and Patients");
        add(jLabel3);
        jLabel3.setBounds(21, 191, 303, 31);

        UserListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Plasma type", "Receiver", "Status", "Role"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(UserListTable);

        add(jScrollPane3);
        jScrollPane3.setBounds(21, 234, 691, 123);

        btnAssign.setBackground(new java.awt.Color(0, 153, 153));
        btnAssign.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        btnAssign.setForeground(new java.awt.Color(255, 255, 255));
        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign);
        btnAssign.setBounds(392, 375, 140, 39);

        btnProcess.setBackground(new java.awt.Color(0, 153, 153));
        btnProcess.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        btnProcess.setForeground(new java.awt.Color(255, 255, 255));
        btnProcess.setText("Accept");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });
        add(btnProcess);
        btnProcess.setBounds(558, 375, 142, 39);

        CostModel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Plasma Type", "Receiver", "Status"
            }
        ));
        jScrollPane1.setViewportView(CostModel);

        add(jScrollPane1);
        jScrollPane1.setBounds(32, 467, 688, 129);

        btnProcess1.setBackground(new java.awt.Color(0, 153, 153));
        btnProcess1.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        btnProcess1.setForeground(new java.awt.Color(255, 255, 255));
        btnProcess1.setText("Accept");
        btnProcess1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcess1ActionPerformed(evt);
            }
        });
        add(btnProcess1);
        btnProcess1.setBounds(536, 607, 142, 39);

        jLabel4.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Status of donors and receivers");
        add(jLabel4);
        jLabel4.setBounds(32, 429, 303, 31);

        btnAssign1.setBackground(new java.awt.Color(0, 153, 153));
        btnAssign1.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        btnAssign1.setForeground(new java.awt.Color(255, 255, 255));
        btnAssign1.setText("Assign");
        btnAssign1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssign1ActionPerformed(evt);
            }
        });
        add(btnAssign1);
        btnAssign1.setBounds(376, 607, 142, 39);

        btnback.setBackground(new java.awt.Color(0, 153, 153));
        btnback.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        btnback.setForeground(new java.awt.Color(255, 255, 255));
        btnback.setText("BACK");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });
        add(btnback);
        btnback.setBounds(56, 616, 142, 39);

        jLabel5.setFont(new java.awt.Font("Gabriola", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("DOCTOR WORK AREA ");
        add(jLabel5);
        jLabel5.setBounds(330, 50, 332, 31);

        jLabel1.setText("Doctor Admin Area");
        add(jLabel1);
        jLabel1.setBounds(300, 90, 260, 33);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed

        int selectedRow = UserListTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row!");
            return;
        }

        WorkRequest request = (WorkRequest)UserListTable.getValueAt(selectedRow, 0);
        request.setReceiver(account);
        request.setStatus("Pending");
        populateTable();
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed

        int selectedRow = UserListTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row!");
            return;
        }

       // int column= 4;
        
        String patient=UserListTable.getValueAt(selectedRow, 4).toString();
        if(patient.equalsIgnoreCase("Patient")){
        PatientOrganWorkRequest request = (PatientOrganWorkRequest)UserListTable.getValueAt(selectedRow, 0);
      
        request.setStatus("Processing");

        
        PaitentRequestJPanel processWorkRequestJPanel = new PaitentRequestJPanel(RightPanel, request);
        RightPanel.add("processWorkRequestJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) RightPanel.getLayout();
        layout.next(RightPanel);
        
        }
        else
        {
        DonorOrganWorkRequest request1 = (DonorOrganWorkRequest)UserListTable.getValueAt(selectedRow, 0);
     
        request1.setStatus("Processing");

        
        DonorRequestJPanel processWorkRequestJPanel1 = new DonorRequestJPanel(RightPanel, request1);
        RightPanel.add("processWorkRequestJPanel", processWorkRequestJPanel1);
        CardLayout layout = (CardLayout) RightPanel.getLayout();
        layout.next(RightPanel);
        }
    }//GEN-LAST:event_btnProcessActionPerformed

    private void btnProcess1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcess1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = CostModel.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row!");
            return;
        }

        PatientCostWorkRequest request = (PatientCostWorkRequest)CostModel.getValueAt(selectedRow, 0);

        request.setStatus("Processing");

        FundRaiserJPanel processCostWorkRequestJPanel = new FundRaiserJPanel(RightPanel, request);
        RightPanel.add("processCostWorkRequestJPanel", processCostWorkRequestJPanel);
        CardLayout layout = (CardLayout) RightPanel.getLayout();
        layout.next(RightPanel);
        
        
    }//GEN-LAST:event_btnProcess1ActionPerformed

    private void btnAssign1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssign1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = CostModel.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a row!");
            return;
        }

        WorkRequest wr = (WorkRequest)CostModel.getValueAt(selectedRow, 0);
        wr.setReceiver(account);
        wr.setStatus("Pending");
        populateCostTable();
    }//GEN-LAST:event_btnAssign1ActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        RightPanel.remove(this);
        CardLayout layout = (CardLayout) RightPanel.getLayout();
        layout.previous(RightPanel);
    }//GEN-LAST:event_btnbackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Candidate;
    private javax.swing.JTable CostModel;
    private javax.swing.JTable UserListTable;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnAssign1;
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton btnProcess1;
    private javax.swing.JButton btnback;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
