/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Role.AdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class ManageEnterpriseAdminJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;

    /**
     * Creates new form ManageEnterpriseJPanel
     */
    public ManageEnterpriseAdminJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();

        this.userProcessContainer = userProcessContainer;
        this.system = system;

        populateTable();
        populateNetworkComboBox();
    }

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) enterpriseJTable.getModel();

        model.setRowCount(0);
        for (Network network : system.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[3];
                    row[0] = enterprise.getName();
                    row[1] = network.getName();
                    row[2] = userAccount.getUsername();

                    model.addRow(row);
                }
            }
        }
    }

    private void populateNetworkComboBox(){
        networkJComboBox.removeAllItems();
        
        for (Network network : system.getNetworkList()){
            networkJComboBox.addItem(network);
        }
    }
    
    private void populateEnterpriseComboBox(Network network){
        enterpriseJComboBox.removeAllItems();
        
        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            enterpriseJComboBox.addItem(enterprise);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        enterpriseJComboBox = new javax.swing.JComboBox();
        submitJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setLayout(null);

        enterpriseJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Enterprise Name", "Network", "Username", "Enterprise Type"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseJTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(39, 58, 523, 95);

        jLabel1.setText("Network");
        add(jLabel1);
        jLabel1.setBounds(88, 201, 99, 33);

        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Boston", "New York" }));
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });
        add(networkJComboBox);
        networkJComboBox.setBounds(258, 198, 160, 39);

        jLabel2.setText("Username");
        add(jLabel2);
        jLabel2.setBounds(88, 325, 120, 33);
        add(usernameJTextField);
        usernameJTextField.setBounds(260, 320, 160, 39);

        jLabel3.setText("Enterprise");
        add(jLabel3);
        jLabel3.setBounds(88, 268, 120, 33);

        enterpriseJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hospital", "NGO", "Pharmacy", "Hotel" }));
        add(enterpriseJComboBox);
        enterpriseJComboBox.setBounds(258, 265, 160, 39);

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton);
        submitJButton.setBounds(120, 490, 115, 41);

        jLabel4.setText("Password");
        add(jLabel4);
        jLabel4.setBounds(88, 382, 113, 33);
        add(nameJTextField);
        nameJTextField.setBounds(260, 430, 160, 39);

        jLabel5.setText("Name");
        add(jLabel5);
        jLabel5.setBounds(92, 437, 69, 33);
        add(passwordJPasswordField);
        passwordJPasswordField.setBounds(260, 370, 160, 39);

        jButton1.setText("Update");
        add(jButton1);
        jButton1.setBounds(270, 490, 117, 41);

        jButton2.setText("Delete");
        add(jButton2);
        jButton2.setBounds(420, 490, 107, 41);
    }// </editor-fold>//GEN-END:initComponents

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed

        Network network = (Network) networkJComboBox.getSelectedItem();
        if (network != null){
            populateEnterpriseComboBox(network);
        }
        
        
    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        
        Enterprise enterprise = (Enterprise) enterpriseJComboBox.getSelectedItem();
        
        
        if (usernameJTextField.getText().isEmpty() || passwordJPasswordField.getPassword().equals("") || nameJTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter all data!");
            return;
        }
        int check = 0;
        if (usernameJTextField.getText().isEmpty() || passwordJPasswordField.getPassword().equals("") || nameJTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter all the fields!");
            check = 1;
        }
        if (usernameJTextField.getText() == null || usernameJTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter user name!");
            check = 1;
        }
        if (passwordJPasswordField.getPassword() == null || passwordJPasswordField.getPassword().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter password!");
            check = 1;
        }
        if (nameJTextField.getText() == null || nameJTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter name!");
            check = 1;
        }
//        for(Enterprise e:network.getEnterpriseDirectory().getEnterpriseList())
//        {
//            if(e.getName().equalsIgnoreCase(name)){
//            JOptionPane.showMessageDialog(null,"There Already exists an Enterprise with this name !");
//            return;
//            }
//        }
        if (check == 0) { 
            String username = usernameJTextField.getText();
            String password = String.valueOf(passwordJPasswordField.getPassword());
            String name = nameJTextField.getText();
            Employee employee = enterprise.getEmployeeDirectory().createEmployee(name);
        
            UserAccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new AdminRole());
            populateTable();
        }
       
        
    }//GEN-LAST:event_submitJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox enterpriseJComboBox;
    private javax.swing.JTable enterpriseJTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
